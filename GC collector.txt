Рассмотрел два объекта User (int id, String name): new User(1, "Alexey") и new User(2, "Anna")

Память, занимаемая первым объектом User: 12 байт(заголовок объекта у 64бит JVM) + 4 байт(поле int) + 4 байт(ссылка на объект String) + выравнивание 4 байт = 24 байт

Память, занимаемая объектом String: 12 байт(заголовок) + 3 *4 байт(3 поля int) + 4 байт(ссылка на массив char) + выравнивание 4 байт = 32 байт

Память, занимаемая массивом char[] : 12 байт(заголовок) + 4 байт(int для длины массива) + 2 байт*6 символов + выравнивание 4 байт = 32 байт

Таким образом первый объект User и все сопутствующие ему объекты занимают в памяти 88 байт.
Со вторым объектом аналогично.
Два объекта User занимают в памяти 176 байт.

Запускал программу со следующими VM options: -Xmx4m -Xms4m -XX:NewRatio=4 -XX:SurvivorRatio=2
Соответсвенно размер young generation равен 800 кб, размер Eden равен 400 кб

При создании 3400 объектов User срабатывал GC
3400 объектов в памяти занимают 299 кб.
Т.е. GC срабатывал при заполнении 3/4 пространства Eden